import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;

public class MessageManager {
	
	private ObjectInputStream input;
	private ObjectOutputStream output;
	
	public MessageManager(InputStream is, OutputStream os){
		this.input = new ObjectInputStream(is);
		this.output = new ObjectOutputStream(os);
	}
	
	public Message readMessage() {
		Message message = null;
	
		try {
			message = (Message) getInput().readObject();
		} catch (IOException | ClassNotFoundException e) {
			this.close();
		}
		
		return message;
	}
	
	public void sendMessage(Message message) {
		try {
			getOutput().flush();
			getOutput().writeObject(message);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void close() {
		try {
			getInput().close();
			getInput().close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}

	public ObjectInputStream getInput() {
		return input;
	}

	public void setInput(ObjectInputStream input) {
		this.input = input;
	}

	public ObjectOutputStream getOutput() {
		return output;
	}

	public void setOutput(ObjectOutputStream output) {
		this.output = output;
	}
	
	
}
